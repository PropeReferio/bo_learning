NAVIGATION 
	z + enter | move current line to top of window
	:34, 34gg, 34G | go to line 34
	g ctrl g | see data about file and position
	dl | delete char to the right
	dj | delete current line, and line below
	D | delete from cursor to end of line
	d3w | delete 3 words
	2d3w | delete 3 words, 2 times
	dd | delete line
	daw | delete word and spaces that you're in the middle of
	das | delete a sentence
	dap | delete a paragraph (blank line delimiter)
	dis | delete sentence, keep the space after
	diw | delete inner word
	ci] | delete everything in the [] and change
	ci" | delete everything in the "" and change
	ca] | delete everything in the [] and the [] and change
	cit | delete/change everything inside an XML/HTML tag
	"ayi> | yank to the a register everything inside the <>
	f> | Go to the first > on the current line
	F< | Go backward to the first < on the current line
	t>, T> | Same thing, but stops one char early
	; | repeat search same direction (linewise)
	, | repeat search opposite direction (linewise)
	df< | Delete from char to (and including) first <

SEARCH
	/the + ENTER | go to first 'the' in file.
	?the + ENTER | go opposite direction.
	n N | cycle forward/back through search results.
	#, * | find the nearest word that's under the cursor
	:s/net/org/ | replace next "net" with "org" on cur line
	:s/net/org/g | replace all "net" with "org" on cur line
	:3s/net/org/g | replace all "net" with "org" on line 3
	:1,5s/net/org/g | replace all "net" with "org" on line 1 thru 5
	:.,$s/net/org/g | replace all "net" with "org" on cur line thru last line
	:%s/net/org/g | replace all "net" with "org" on all lines
	:/Global/,/Local/s/net/org/g | replace 'net' with 'org' between "Global" and "Local"
	:/Global/,$s/net/org/g | replace 'net' with 'org' between "Global" and the end.  
	To avoid escaping backslashes: :s#/var/spool#/usr/local# - replace first pattern with second

CHANGE CASE
	~ | change case of selected char
	U | make uppercase
	u | make lowercase
	/andENTERcw&n.n. | go to "and", replace with "&", do the same
	for the next two "and"

HELP
	:h [command] | open help [at command docs]
	ctrl + w + w | switch between help docs and the file you were editing
	:h :qu [ctrl + d] | show commands that match 'qu' [use tab to rotate]
	ctrl + ] | in help file, jump like a hyperlink to selected text's help
	:set shiftwidth? | Get shiftwidth setting.
	:set list! | See tabs and where lines end. Repeat to exit.

CLIPBOARD
	y2w | yank 2 word
	2P | put twice before cursor
	d$ | delete (cut) from cursor to end of line
	dd | delete (cut) entire line
	yy | yank (copy) whole line
	"fyy | copy current line to "f register
	"Fyy | append current line to "f register
	:reg | view all registers
	"ac3w | change 3 words, keep them in the "a reg

MACROS
	qc, cmd, q | record to c register, end recording
	qC, cmd, q | Append to c register, end recording
	^G | get line count, good for applying a macro to a csv
	.,$@w | Use the @w macro on every line between current and end
	:27,35normal @w | Use the @w macro between lines 27 and 35
	You can store macros in .viminfo for long term use
	Better to store them in .vimrc

UNDO / REDO
	u | undo
	^r | redo

VISUAL MODE
	v | Enter characterwise visual mode.
	shift+v | Enter linewise visual mode.
	^v | Enter block visual mode.
	> | indent by shiftwidth.
	< | un-indent by shiftwidth.
	Try making substitutions using linewise visual mode.
	:ce [num] | center selected lines [within num columns wide]
	:right[num],left[num] | align left or right [with num margin]

INSERT / REPLACE
	I | start at beginning of line
	A | start at end of line
	O | start on new line above
	o | start on new line below
	R | overwrite characters at existing position
	r | overwrite single character

JOIN
	5J | Join 5 lines together.
